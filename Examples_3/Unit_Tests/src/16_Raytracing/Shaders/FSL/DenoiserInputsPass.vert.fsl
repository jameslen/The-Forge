/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 *
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "Shared.fsl.h"

STRUCT(VSOutput)
{
	DATA(float4, position, SV_Position);
	DATA(float4, previousPosition, TEXCOORD0);
	DATA(float3, viewSpacePosition, TEXCOORD1);
	DATA(float3, worldSpaceNormal, TEXCOORD2);
};

STRUCT(VsIn)
{
	DATA(float3, position, POSITION);
	DATA(float3, normal, NORMAL);
};

RES(CBUFFER(ShadersConfigBlock), gSettings, UPDATE_FREQ_PER_FRAME, b0, binding = 0);

VSOutput VS_MAIN(VsIn In)
{
	INIT_MAIN;
	
	float3 position = In.position;
	float3 normal = In.normal;
	
	VSOutput Out;
	Out.viewSpacePosition = mul(gSettings.mWorldToCamera, float4(position, 1)).xyz;
	Out.worldSpaceNormal = normal;
	Out.position = mul(gSettings.mCameraToProjection, float4(Out.viewSpacePosition, 1));
	Out.previousPosition = mul(gSettings.mWorldToProjectionPrevious, float4(position, 1));
	
	RETURN(Out);
}
