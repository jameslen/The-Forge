/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 *
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "shader_defs.h.fsl"

#include "../../../../../../Common_3/Renderer/VisibilityBuffer/Shaders/FSL/triangle_filtering.h.fsl"
#include "triangle_filtering_impl.h.fsl"

#include "../../../../../../Common_3/Renderer/VisibilityBuffer/Shaders/FSL/clear_buffers.h.fsl"

struct EntryRecord
{
	uint mNumDispatchGroups;
};

struct FilterRecord
{
	uint mNumDispatchGroups : SV_DispatchGrid;
};

[Shader("node")]
[NodeLaunch("broadcasting")]
[NumThreads(1, 1, 1)]
[NodeDispatchGrid(1, 1, 1)]
[NodeIsProgramEntry]
void Entry_Node(DispatchNodeInputRecord<EntryRecord> inputData,
	[MaxRecords(1)]
	NodeOutput<FilterRecord> Filter_Node)
{
	ClearIndirectDrawArgsBuffers(0);

	uint numDispatchGroups = inputData.Get().mNumDispatchGroups;
	if (!numDispatchGroups)
	{
		return;
	}

	GroupNodeOutputRecords<FilterRecord> filterRecord = Filter_Node.GetGroupNodeOutputRecords(1);
	filterRecord[0].mNumDispatchGroups = numDispatchGroups;
	filterRecord.OutputComplete();
}

[Shader("node")]
[NodeLaunch("broadcasting")]
[NodeMaxDispatchGrid(511,1,1)]
NUM_THREADS(VB_COMPUTE_THREADS, 1, 1)
void Filter_Node(in uint3 threadId : SV_GroupThreadID, in uint3 groupId : SV_GroupID, DispatchNodeInputRecord<FilterRecord> inputData)
{
    FilterTriangles(threadId, groupId);
}
